name: Build site
on:
  push:
    branches-ignore:
      - master
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  typecheck:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Enable corepack
        run: corepack enable
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm prepare
      - run: pnpm typecheck
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm build --no-minify --no-sourcemap
      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: built-frontend
          path: .output
          if-no-files-found: error
          include-hidden-files: true
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install dependencies
        run: go mod download
      - name: Build binary
        run: |
          go build ./cmd/main/main.go
